TOPIC
    about_PassiveInstall

SHORT DESCRIPTION
    A utility collection for passive or silent application installations.

LONG DESCRIPTION
    PassiveInstall is a collection of PowerShell cmdlets that can be used in a PowerShell script to create a customized 
	installation of a vendor application without repackaging.  The cmdlets include support both for running installers, 
	and the kinds of customization typically needed.  The cmdlets also produce output for logging that makes it easier 
	to review a captured log file and determine what did or did not happen.

	By default, PassiveInstall works in a passive mode, meaning that all steps are automated but you can see what is
	hapening live on the screen at that time.  
	
	But sometimes you want a silent installation, for example to keep the end-user from interfering with the script.
	If you start your powershell window hidden, PassiveInstall cmdlets will support you. Whenever a cmdlet will create 
	a new window, there will be a -DoSilent optional parameter that	will start the new window hidden as well.

	PassiveInstall is provided on an "As Is" basis free of charge for any suitable purpose.  SPecifically, the software may 
	not be decompiled or reverse engineered. Copyright 2018, TMurgent Technologies, LLP

EXAMPLES
    Typically start with the Install-PassiveInstallFile, in which you supply a file to be installed and optional 
	arguments for the command line.   You just specify the file and the cmdlet figures out how to do the installation.  
	Supported file types are MSI, MSP, EXE, CMD, BAT, PS1, REG, and ZIP (where the args is the folder to export into).

	After that you can add additional files and folders, remove them, as well as add and remove from the registry.  
	Special support is given to make it easy to remmove or add shortcuts.

	And finally the Optimize_PassiveNgenQueues cmdlet can be called to ensure that the NGEN queue is flushed.

CMDLETS
	Approve-PassiveElevation
		Checks if elevation for RunAsAdministrator is present.  With the -AsAdmin switch it will restart your script with a RunAs.
	Copy-PassiveFile	
		Copies a file to the designated location, making sure intervening directories are created if needed and 
		optionaly renaming it on the fly.  Existing files over-written by default.
	Copy-PassiveFolder
		Copies a folder to the destination, making sure intervening directories are created if needed. Existing files not over-written by default.
	Disable-PassiveWindowsService
		Checks to see that the service exists and disables it.  Note: it does not stop the service if running.
	Install-PassiveInstallFile
		Performs appropriate (file type dependent) installation activity on MSI, MSP, EXE, ZIP, PS1, BAT, CMD, REG
	Move-PassiveFolder
		Moves the source folder underneath the destination folder.  The destination folder will automatically be 
		created if not present.
	Move-PassiveRegistryKey 
		Moves the source key underneath the destination key.  Typically used to move HKLM to HKCU. 
		The destination key will automatically be created if not present.
	New-PassiveAppPathSearch 
		Registers the application for windows start menu search.
	New-PassiveDesktopShortcut 
		Creates a shortcut on the current user's desktop as specified.
	New-PassiveEnvironmentVariable 
		Changes the value of an existing environment variable or create a new one with the value.
    New-PassiveAppPathSearch
		Creates/updates an AppPath entry to support start menu search for the target.
	New-PassiveFolderIfNotPresent 
		Checks if a folder exists, and if not it creates it.
	New-PassiveRegistryKeyIfNotPresent 
		Checks if a registry key exists, and if not it creates it.
	New-PassiveStartmenuShortcut 
		Creates a shortcut on the start menu as specified.
	Optimize-PassiveNgenCompileFile
		Performs an ngen compilation of an MSIL file into the native interface format.
	Optimize-PassiveNgenQueues 
		Locates and flushes each of the NGEN optimization queues.
	Remove-PassiveDesktopShortcuts 
		Removes the named shortcuts by name without needing to know the path.
	Remove-PassiveEnvironmentVariables 
		Deletes the named environment variables, if present.
	Remove-PassiveFiles
		Removes a list of files.
	Remove-PassiveFolders 
		Deletes the named Folders, if present.
	Remove-PassiveInstallerCacheFilePattern
		Removes files matching a filename pattern if located in the named folder, but with option for only if created in the last 24 hours.
	Remove-PassiveInstallerCacheFolders
		Removes the named folder, but with options for only if emoty and only if created in the last 24 hours.
	Remove-PassiveRegistryItem
		Deletes a registry item or key (including child items/nodes).
	Remove-PassiveStartMenuShortcuts 
		Removes the named shortcuts by name, without needing to know the path.
	Set-PassiveShortcutFixupBatCmd 
		Fixes an issue with shortcuts that occurs with App-V 5. Shortcuts that simply link to a file ending 
		in .Bat or .Cmd fail to work correctly under App-V 5.x.
        This fixup re-writes the shortcut to use C:\Windows\System32\cmd.exe pointing to the cmd/bat file.
	Set-PassiveShortcutFixupReg
		Fixes an issue with shortcuts that occurs with App-V 5. Shortcuts that simply link to a file ending 
		in .Reg fail to work correctly under App-V 5.x.
        This fixup re-writes the shortcut to use C:\Windows\System32\reg.exe pointing to the reg file.
	Set-PassiveServiceAccount
		Changes the service (logon) account for the named windows service.
	Set-PassiveShortcutFixupSpaceAtEnd
		Fixes an issue with shortcuts that occurs with App-V 5. Shortcuts that have a space at the end of the 
		filename fail to work correctly under App-V 5.x.
        This fixup re-writes the shortcut to remove the trailing space in the name.
	Set-PassiveWinColors 
		Changes the color scheme in the PowerShell window, optionally clearing the buffer.
	Set-PassiveWinSize 
		Changes the width, height, position, and/or title, of the PowerShell window, or hides it altogether.
	Show-PassiveTimer
		Sleep in ms with progress bar.  Optional message.


KEYWORDS
    Passive, Silent, Install.

SEE ALSO
    Download software http://www.tmurgent.com/resources/tools-downloads/tools-packaging/117-tools/packaging-tools/435-passiveinstall
	Free online training class on PassiveInstall http://www.tmurgent.com/educate/course/view.php?id=6 